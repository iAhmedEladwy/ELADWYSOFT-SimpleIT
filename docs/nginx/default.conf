server {
    listen 80;
    server_name ${NGINX_HOST};
    
    # Redirect HTTP to HTTPS
    # Uncomment the following for HTTPS redirection in production
    # location / {
    #     return 301 https://$host$request_uri;
    # }

    # For development/testing without HTTPS
    location / {
        proxy_pass http://${APP_HOST}:${APP_PORT};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}

# HTTPS configuration - uncomment for production use
# server {
#     listen 443 ssl;
#     server_name ${NGINX_HOST};
#
#     ssl_certificate /etc/nginx/ssl/simpleit.crt;
#     ssl_certificate_key /etc/nginx/ssl/simpleit.key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#
#     location / {
#         proxy_pass http://${APP_HOST}:${APP_PORT};
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#     }
# }