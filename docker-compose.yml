version: '3.8'

services:
  # PostgreSQL Database (matching deployment script - PostgreSQL 16)
  postgres:
    image: postgres:16-alpine
    container_name: simpleit-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: simpleit
      POSTGRES_USER: simpleit
      POSTGRES_PASSWORD: ${DB_PASSWORD:-simpleit}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Initialize database with schema if present
      - ./scripts:/docker-entrypoint-initdb.d/:ro
    ports:
      - "5432:5432"
    networks:
      - simpleit-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U simpleit -d simpleit"]
      interval: 10s
      timeout: 5s
      retries: 5

  simpleit:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: simpleit-app
    restart: unless-stopped
    ports:
      - "3000:5000"
    environment:
      # Environment variables matching deployment script
      - NODE_ENV=production
      - PORT=5000
      - USE_HTTPS=false
      - DATABASE_URL=postgres://simpleit:${DB_PASSWORD:-simpleit}@postgres:5432/simpleit
      - SESSION_SECRET=${SESSION_SECRET:-$(openssl rand -hex 32)}
    volumes:
      # Mount uploads directory for persistence
      - uploads:/app/uploads
      # Mount backup directory (matching deployment script)
      - backups:/app/backups
    networks:
      - simpleit-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); http.get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }).on('error', () => { process.exit(1); });"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy (matching deployment script configuration)
  nginx:
    image: nginx:alpine
    container_name: simpleit-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - simpleit-network
    depends_on:
      - simpleit

volumes:
  uploads:
  backups:
  postgres_data:

networks:
  simpleit-network:
    driver: bridge